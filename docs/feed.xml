<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>These are my thoughts.</description>
    <link>https://igbanam.github.io/</link>
    <atom:link href="https://igbanam.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 05 Oct 2021 17:48:49 +0000</pubDate>
    <lastBuildDate>Tue, 05 Oct 2021 17:48:49 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>On the Quest of Origins</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/posts/chekwubeuchea_continue-chekwubeuchea-dreamjobsandcareersnetwork-activity-6699817333566791680-reKt&quot;&gt;This is an amazing read&lt;/a&gt;, and an even more pertinent concern. This problem has been prevalent for millennia; and from the comments to the LinkedIn post, the prevalence is evident.&lt;/p&gt;

&lt;p&gt;This question is part of a larger set of questions I have pondered on in recent years. I fondly call it the ‚ÄúQuest for Origins‚Äù. It presents itself in many forms. &lt;a href=&quot;https://www.linkedin.com/posts/chekwubeuchea_continue-chekwubeuchea-dreamjobsandcareersnetwork-activity-6699817333566791680-reKt&quot;&gt;The original post&lt;/a&gt; is one. More examples are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;‚ÄúWho takes the photographer‚Äôs picture?‚Äù&lt;/li&gt;
  &lt;li&gt;‚ÄúWho listens to the therapist?‚Äù, and&lt;/li&gt;
  &lt;li&gt;‚ÄúWho takes care of the caretaker‚Äôs daughter while the caretaker is out there taking care?‚Äù ‚Ä¶which is my most favorite instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I‚Äôll continue this line of thought with the original post‚Äôs question.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Who takes care of HR?&lt;/p&gt;

  &lt;p&gt;~ &lt;a href=&quot;https://www.linkedin.com/in/chekwubeuchea/&quot;&gt;Chekwube Uchea&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The short answer is ‚Äúno one‚Äù. That‚Äôs it. That‚Äôs the reality of the matter. This doesn‚Äôt mean all is bleak, by the way; because the HR &lt;em&gt;can&lt;/em&gt; be taken care of. The photographer‚Äôs picture can be taken. No one takes care of the HR, but the emphasis should be on ‚Äúone‚Äù. My pondering stands the risk of being considered shallow because dates to sound like a thesis but lacks empirical backing, it is all intuition and thought experiments. So take this with a grain ‚Äî no, bag ‚Äî of salt.&lt;/p&gt;

&lt;p&gt;From my thoughts, there are two approaches to solving this problem: ‚Äústructural‚Äù, or ‚Äúamorphous‚Äù. These two bank on two of the basic human hormones: serotonin  and oxytocin, respectively.&lt;/p&gt;

&lt;h2 id=&quot;the-structural-approach&quot;&gt;The Structural Approach&lt;/h2&gt;

&lt;p&gt;The way industry has solved this is the former: creating intricate structures in hierarchies. This does not solve the problem totally. It only pushes the problem further into the future, further up the hierarchy. When someone gets to the top of said hierarchy, the problem re-presents itself with the same strength as before. This is mind-stunning, isn‚Äôt it? A problem seemingly solved reappearing hints to a poor job was done while solving it. This is expected. The structural method is a patch method. Since it brings momentary respite and is good for the mechanism of business, industry moves on.&lt;/p&gt;

&lt;h2 id=&quot;the-amorphous-approach&quot;&gt;The Amorphous Approach.&lt;/h2&gt;

&lt;p&gt;This is a more communal approach. In the amorphous method, no one is directly responsible for another; in sharp contrast with the ‚ÄúStructural‚Äù. However, from aggregating many on the same level, with the same request, the effort which cannot be mustered by oneself to solve the problem can be borrowed from the group. This group is usually formed of individuals with the same leveling; could be skill set, experience, or some higher order derived identity grouping. This amorphous method, in society, is seen as unions, collectives, bodies, and so on. The adulteration of unions and other amorphous forms of support structure in our society is in the need to have a representation; thereby a representative. This quickly devolves the union from the abstract amorphous into the deterministic structural ‚Äî but I digress.&lt;/p&gt;

&lt;h2 id=&quot;what-to-do&quot;&gt;What to do?&lt;/h2&gt;
&lt;p&gt;The solution I have found for the ‚ÄúQuest of Origins‚Äù is neither in the structural, not the amorphous, but in the tango between them two. This puts emphasis on me ‚Äî or the person undergoing this quest ‚Äî to craft a means of support unique to their quest. In a sense, reaching this point is an indication that a mind is ripe for entrepreneurship ‚Äî the scaling of this mindset is for a different conversation. In my case, I setup multiple structural and amorphous groups: join a team with a clear reporting line, have a group of colleagues in said workplace to bounce ideas off, have friends with the same skill set outside the workplace to meet with occasionally, have mentees to teach the experience I‚Äôve garnered. This is sort of a ‚Äúcardinal‚Äù approach, if I may coin a name. It fixes the problem in a north, west, east, south approach respectively.&lt;/p&gt;

&lt;p&gt;Hope this helps throw more light on your conundrum. I‚Äôm open to discussing more about this, if you wish.&lt;/p&gt;

</description>
        <pubDate>Sat, 15 Aug 2020 10:34:00 +0000</pubDate>
        <link>https://igbanam.github.io/on-the-quest-of-origins/</link>
        <guid isPermaLink="true">https://igbanam.github.io/on-the-quest-of-origins/</guid>
        
        <category>hr</category>
        
        <category>thought</category>
        
        <category>sociology</category>
        
        <category>support</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Cleaning up my Macbook</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/images/slim-pre.png&quot; alt=&quot;Total Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are many culprits which eat up your hard drive space. I recently had to clean up my Macbook. What I learned is listed here.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; Media is not the only content which eats up your hard disk space.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Waking up to ‚ÄúYour memory is almost full‚Äù, I was forced to take a look at how I use my hard disk space. Who would have known that 256GB would run out so soon? Through my time on this machine, I have been careful about storing audiovisual media: I have no music, I don‚Äôt use iTunes, I have no movies, I limit the number of PDFs I store by reading and deleting. Despire these practices ‚Äî¬†which some might deem &lt;em&gt;ascetic&lt;/em&gt;, 256GB hard disk ran out in no time. Why?&lt;/p&gt;

&lt;h3 id=&quot;operating-system&quot;&gt;Operating System&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-system.png&quot; alt=&quot;System Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a non-negotiable 5GB to 6GB used up by the operating system. This is necessary for your computer to run. There‚Äôs no touching this, no tampering with this. Matter of fact, when inspecting your newly gotten computer, chances are you would see 251GB free. This is where the extra 6GB ish went to. Some other areas which could contribute to system bloat are files in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Library&lt;/code&gt; folder. These files are used to support your computer‚Äôs runtime. But as we shall see, most of them are obsolete or unnecessary.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bloat thickens&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My Macbook breaks down my storage use into the following categories&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Documents&lt;/li&gt;
  &lt;li&gt;Apps&lt;/li&gt;
  &lt;li&gt;Music Creation&lt;/li&gt;
  &lt;li&gt;System&lt;/li&gt;
  &lt;li&gt;Other Volumes in Container&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I‚Äôll tackle this in increasing order of bloat.&lt;/p&gt;

&lt;h3 id=&quot;music-creation&quot;&gt;Music Creation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-music.png&quot; alt=&quot;Music Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is Garageband, basically. My work as a software developer for software developers has little to nothing to so with Music Creation, so the assets here are little.&lt;/p&gt;

&lt;h3 id=&quot;apps&quot;&gt;Apps&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-apps.png&quot; alt=&quot;Apps Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I currently have 66 apps on this Macbook. The biggest of them all is ‚Äî ‚Ä¶drum roll‚Ä¶ ‚Äî¬†&lt;strong&gt;XCode&lt;/strong&gt;. Yup, you guessed right. That fat blob of I-only-make-apple-apps sits in a proud 19.02GB space. The next largest app is iMovie at 2.82GB. Who uses these things?&lt;/p&gt;

&lt;h3 id=&quot;documents&quot;&gt;Documents&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-documents.png&quot; alt=&quot;Documents Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This contains everything in the user space. It‚Äôs hard figuring out what the culprit is here, so I used a few tips to help me out.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use the List View in finder. Set this to show sizes of files and folders in the Show View option of the context menu. Order by Size.&lt;/li&gt;
  &lt;li&gt;(Pretty much the same thing as 1. but in the command line)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
du -hd 1 | sort -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-clean-up-&quot;&gt;The Clean-up üßπ&lt;/h3&gt;

&lt;p&gt;Here, I found many interesting things&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Most of the culprits are in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Library&lt;/code&gt;. ‚Äî¬†This folder is not shown by default. Click ‚ÄúGo‚Äù in the Finder menu, and hold down Option to reveal this.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt; stores the pictures of everyone you‚Äôve ever joined a conference with on your computer.&lt;/li&gt;
  &lt;li&gt;After you uninstall an application, the Application Support within your Library may live on.&lt;br /&gt;
  a. Also, when you install a newer version of an application and its underlying file struucture changes, the remnants of the old structure remain in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Library&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Hidden folders are not accounted for in the Finder view.
  a. For this, I used the commandline option, which showed me that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ruby-motion&lt;/code&gt; sat in a comfortable 77GB space.&lt;/li&gt;
  &lt;li&gt;Beware of Docker. It‚Äôs fun to play with, and it solves an amazing problem. But it leaves so much behind, and does not automatically clean up after itself.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-post.png&quot; alt=&quot;The Slim!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cleaning up should not be a one-time thing. It should be a lifestyle.&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Oct 2019 11:05:00 +0000</pubDate>
        <link>https://igbanam.github.io/cleaning-up-my-macbook/</link>
        <guid isPermaLink="true">https://igbanam.github.io/cleaning-up-my-macbook/</guid>
        
        <category>laptop</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Presentation Skills</title>
        <description>&lt;p&gt;Through our careers as software engineers, our experience would grow as we practice our craft. There‚Äôs a saying that one does not really know a topic well enough until they can teach it. This knowledge sharing opens up what we know for critique, and solidifies what we know. There are many ways o share knowledge. This post focuses on presentations.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You never really know something until you can teach it.&lt;/p&gt;

  &lt;p&gt;~ Unknown&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Presentations can sometimes be daunting; standing on a [make-shift] stage, looking at everyone, them looking back. Sometimes, you get nervous. Sometimes, you will swallow your words. Presentations, like software programming, is a skill which can be learned and mastered.&lt;/p&gt;

&lt;p&gt;The mode and manner of your presentation is as important as your content. Do not prioritize one at the expense of the other. Most times, our expertise takes care of the content aspect. But nothing takes care of how the presentation is done. Here, I would share some tips I have used over the years.&lt;/p&gt;

&lt;h3 id=&quot;know-your-content&quot;&gt;Know Your Content&lt;/h3&gt;

&lt;p&gt;When presenting any content, it is pertinent you are conversant with the topic you choose to present. When we create a presentation out of experience, the topic picks itself. When we have to pick a topic to present, we need to research that topic thoroughly. You may not be an expert in the topic, but you must be an expert in what you know. This should also come with a pinch of humility. There may be some people in your audience who may know your topic more than you do. Remember your presentation is also a way for you to learn.&lt;/p&gt;

&lt;p&gt;Pick a topic you are passionate about. This passion would drive your research. A topic you are not interest in would grow boring as you prepare for the presentation. This may lead to burnout; specifically ‚Äúdetachment‚Äù from your subject matter.&lt;/p&gt;

&lt;h3 id=&quot;calm-down&quot;&gt;Calm Down&lt;/h3&gt;

&lt;p&gt;Let‚Äôs face it: when you stand in front of a crows to give a speech, you will feel nervous. If you do not feel nervous when walking up the stage, it will come with you look into the eyes of the crowd. I get most nervous when the audience goes silent because I‚Äôm thinking ‚ÄúThey actually want to listen. What if‚Ä¶?‚Äù At this point, I try to calm down. What is the worst that could happen?&lt;/p&gt;

&lt;p&gt;Before every presentation, I mentally go through the presentation in practice. I try to mimic the feelings of the day, try to practice facing the audience. This helps me prepare my nerves not to break at the first impact of nervousness when it hits. Practice this with a friend. If you have more fears, open up to a friend about them. This would help you think through your fears from an objective standpoint.&lt;/p&gt;

&lt;p&gt;Think positive. Remember the first sentence which drives me into nervousness? ‚ÄúThey actually want to listen.‚Äù This is true for every audience who have come ‚Äî regardless of the travel ‚Äî¬†to listen to what you have to say. Your audience is proof that there are people who believe in you. You have to believe in yourself. Positive thoughts go a long way. My practice with this is thus: Try not to use the word ‚Äúnot‚Äù when speaking about your presentation. In any sentence, you think to utter about your presentation, if it has the word ‚Äúnot‚Äù in it, try to reword that sentence to remove the ‚Äúnot‚Äù. If you cannot find an alternate sentence which removed ‚Äúnot‚Äù but keeps the message you want to pass across, it‚Äôs best to be silent.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For positive thought, try speaking without ‚Äúnot‚Äù in your sentences.&lt;/p&gt;

  &lt;p&gt;Do this as a zen practice&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exercise. Yes, I mean it. Workout before the presentation. This also helps you calm your nerves on stage. How? When your body goes through controlled stress, it builds its resilience. When a built resilience meets stress levels below the ones which build it, the propensity to panic is greatly reduced. Speaking during presentations is a physical act. It takes a toll on your breathing. Exercises (especially cardio) would build your stamina, allowing you to talk for longer without getting tired. Exercising the morning of your presentation helps get your blood flowing, makes you more alert.&lt;/p&gt;

&lt;p&gt;Another culprit which makes presenters more susceptible to a nervous breakdown is lack of sleep. I cannot stress this enough. We all need sleep. Try to get a good 8 hours of sleep the night before your presentation. If you can get more, please do. Insufficient sleep makes our bodies react in weird ways.&lt;/p&gt;

&lt;h3 id=&quot;be-enthusiastic&quot;&gt;Be Enthusiastic&lt;/h3&gt;

&lt;p&gt;If you cannot be calm, best to channel all that energy into enthusiasm for your presentation.&lt;/p&gt;

&lt;h3 id=&quot;speak-audibly&quot;&gt;Speak Audibly&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Focus on what you want to say and how to say it. You‚Äôd be shocked how hard this gets.&lt;/li&gt;
  &lt;li&gt;Practise with a friend (or a recorder). The goal here is to get feedback. Rehearse out loud.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;measure-your-speech&quot;&gt;Measure Your Speech&lt;/h3&gt;

&lt;p&gt;When the nerves are high, there is a tendenty to speak faster than your natural cadence. This is normal. If you find yourself speaking faster than you usually do, pause at some point. The only person who knows your content inside out is you. A pause does not count poorly to your performance. It is an integral part of your presentation.&lt;/p&gt;

&lt;p&gt;Presentations are built to have pauses; this is why each slide is a separate entity. It is better to consciously design your presentation to have pause points within it. A good way to do this is to ask the audience a question. Throwing control back to the audience for a few seconds could help in allowing you gather your thoughts and composure.&lt;/p&gt;

&lt;p&gt;Remember that the audience has gathered to listen to you. You are in control of the presentation.&lt;/p&gt;

&lt;h3 id=&quot;understand-presentation-techniques&quot;&gt;Understand Presentation Techniques&lt;/h3&gt;

&lt;p&gt;On presentation day, dress smart; or dress in a way which augments your presentation. If your audience percieves you as someone capable of giving the presentation, they would be more open to your content. If you are presenting to a panel of business men on the details of a business, best to dress like a businessman.&lt;/p&gt;

&lt;p&gt;The general rule of thumb is to dress smart. Sometimes, you may dress differently depending on your research on your audience, and the knowledhe of your topic. If I am presenting on fire hazards and safety peocedures in such situations, I would dress like a fire marshall; maybe not the whole costume shindig; but a nice clean T-shirt with sharp jeans, and rugged shoes would do.&lt;/p&gt;

&lt;p&gt;All in all, make sure you‚Äôre comfirtable in yoru clothing. You would be standing in front of an audience, talking for quite some time.&lt;/p&gt;

&lt;h3 id=&quot;know-your-environment-and-audience&quot;&gt;Know Your Environment and Audience&lt;/h3&gt;

&lt;p&gt;Through this article, I have touched on some bits where you have to be aware of your audience. It pays to understand the demographic you‚Äôre speaking to: this would help guide the language you use in delivering your content.&lt;/p&gt;

&lt;p&gt;Akin to the audience, it is also imperative to understand the enditonment you would be presenting in. Try to visit the venue for your presentation a day before. Get on stage with no one there and practice walking around. Get familiar with the size of the room, and how your voice bounces off the walls when you speak. This would create some familiarity with your space. During the presentation, you would feel more comfortable walking around and interacting with your envitonment.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;There is never a master of presentations. The skill is built over a lifetime. Every new presentation is a chance to learn something new; the audience is unique, the time the presentation is given has its unique properties. When approaching a presentation, even if it is on a topic which you have presented on before, treat it with the same respect and humility as a first time presentation.&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Oct 2019 22:32:00 +0000</pubDate>
        <link>https://igbanam.github.io/presentation-skills/</link>
        <guid isPermaLink="true">https://igbanam.github.io/presentation-skills/</guid>
        
        <category>public speaking</category>
        
        <category>presentation</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Know Your Operations</title>
        <description>&lt;p&gt;I recently saw a new detail of a new release into Ruby 2.7 where the array class would have methods like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intersection&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;union&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;difference&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TL;DR These already exist; as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; ‚Äî¬†but they have been SUPERCHARGED üî•&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are &lt;a href=&quot;https://www.ruby-lang.org/en/news/2019/05/30/ruby-2-7-0-preview1-released/&quot;&gt;many cool additions to Ruby 2.7&lt;/a&gt;. Through my readings this morning, I saw that the array class would be getting an additional &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#intersection&lt;/code&gt; alias; yet another alias along the lines of &lt;a href=&quot;https://ruby-doc.org/core-2.6.3/Array.html#method-i-union&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#union&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://ruby-doc.org/core-2.6.3/Array.html#method-i-difference&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#difference&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While this sounded interesting, I thought ‚ÄúWhat is the performance benefit of having this method?‚Äù So I got the new &lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.0-preview1.tar.gz&quot;&gt;Ruby 2.7&lt;/a&gt; and gave it a spin.&lt;/p&gt;

&lt;p&gt;Sadly, the &lt;a href=&quot;https://github.com/ruby/ruby/pull/2533/files&quot;&gt;patch for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#intersection&lt;/code&gt;&lt;/a&gt; has not made it into the 2.7 preview build yet.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;‚úî ~/Downloads/ruby-2.7.0-preview1/install_here/test_programs
10:43 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;../bin/ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
ruby 2.7.0preview1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2019-05-31 trunk c55db6aa271df4a689dc8eb0039c929bf6ed43ff&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;x86_64-darwin18]
‚úî ~/Downloads/ruby-2.7.0-preview1/install_here/test_programs
10:43 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;../bin/ruby
puts Array.new.respond_to?&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;:intersection&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I thought to give the other methods a benchmark. This benchmark still uses the Ruby version above, and seeks to compare the timing difference between the method on the object and the operation.&lt;/p&gt;

&lt;h3 id=&quot;array-difference-aka--&quot;&gt;Array Difference a.k.a ‚Äú-‚Äú&lt;/h3&gt;

&lt;p&gt;The syntax for this is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;left_array.difference(right_array)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This returns all the elements in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;left_array&lt;/code&gt; which are not present in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;right_array&lt;/code&gt;. The difference operation, unlike all other operations considered here, is not commutative. This means &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;left_array - right_array != right_array - left_array&lt;/code&gt;, unless in a special case where the contents of both arrays allow this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benchmarker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require 'benchmark'

a = (1..8).to_a
b = (2..9).to_a

# a - b = [1]
# b - a = [9]

puts &quot;Time for a - b&quot;
puts Benchmark.measure { 1_000_000.times { a - b } }
puts &quot;Time for a.difference b&quot;
puts Benchmark.measure { 1_000_000.times { a.difference b } }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Results for Difference&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Time for a - b
  0.263208   0.000529   0.263737 (  0.264506)
Time for a.difference b
  0.284521   0.002734   0.287255 (  0.289998)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The results here show that the &lt;strong&gt;operation is more performant&lt;/strong&gt;; albeit slightly than the method call.&lt;/p&gt;

&lt;p&gt;Note that the test inputs here are two ordered arrays ‚Äî which I believe is the simplest case ‚Äî¬†made to overlap themselves with only one integer.&lt;/p&gt;

&lt;h3 id=&quot;array-union-aka-&quot;&gt;Array Union a.k.a ‚Äú|‚Äù&lt;/h3&gt;

&lt;p&gt;This returns all unique items in two arrays. This operation is commutative. Despite the position of the operands, the result is always the same&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benchmarker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'benchmark'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# a | b = [1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Time for a | b&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Time for a.union b&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Results for (ordered) Union&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Time for a | b
  0.514844   0.003135   0.517979 (  0.521104)
Time for a.union b
  0.520425   0.002118   0.522543 (  0.525702)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;From the benchmarks, it seems like there isn‚Äôt much of a performance hit with the methods on the array object; slightly less performant, but nothing which would bring down your servers in production.&lt;/p&gt;

&lt;p&gt;This is still a welcome change; along two lines&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ruby prides itself in fostering developer happiness. With this new additions, code just reads better; the intent of the code is self-evident.&lt;/li&gt;
  &lt;li&gt;With these new methods, we now have the ability to pass multiple arrays to the operations. e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[1, 2, 3].difference([1], [2]) #=&amp;gt; [3]&lt;/code&gt;. This was not possible with just the operations.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 18 Oct 2019 08:51:00 +0000</pubDate>
        <link>https://igbanam.github.io/know-your-operations/</link>
        <guid isPermaLink="true">https://igbanam.github.io/know-your-operations/</guid>
        
        <category>ruby</category>
        
        <category>performance</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>C.I. with Github Actions</title>
        <description>&lt;p&gt;Continuous Integration is key in the delivery of any software. Now, ‚Äúcontinuous integration‚Äù has had many definitions over the years. Some say it has to do with bringing code from different branches, ‚Äúintegrating‚Äù them into a delivery beanch. Some day it‚Äôs the introduction of automated tests into your pipeline. Others, as primitive as me, say it‚Äôs CircleCI and TrravisCI. Wherever you fall on this spectrum, you may have the belief that continuous integration makes it easier to ship code.&lt;/p&gt;

&lt;p&gt;There are many continuous integration tools. Most of these tools handle running tests for a particular changeset of your sourcecode. This helps you validate that the new changeset both meets its requirements (written in tests) and does not break the hitherto realized requirements of the system. Previously, I have depended on CircleCI to get this done. But with the recent Github Actions, one could do anything which could be done with a repo based on some Github events like push, and pull-request. With this new capability, I sought to wean myself from CircleCI and other CI pipelines. Since code is hosted on GitHub, I thought it best to localize the delivery of the code on Github.&lt;/p&gt;

&lt;h3 id=&quot;the-setup&quot;&gt;The Setup&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;A new Hanami project. Hanami comes with RSpec as a default testing framework.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;Github Actions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;our-ci&quot;&gt;Our CI&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;br /&gt;
This defines the action, and creates a reference through your workflow&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Tha CI&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;on&lt;/strong&gt;&lt;br /&gt;
Actions run on specific events in the Github ecosystem. Push and Pull Request are two popular events Actions could be run on. For a more comprehensive list, read &lt;a href=&quot;https://help.github.com/en/articles/events-that-trigger-workflows&quot;&gt;Events that trigger workflows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We would want to ‚ÄúRun Tha CI‚Äù on every push event.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This list is an array. If you want this workflow to trigger for more than one event, add the event to the array separated by commas. Another way of writing this could be&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;jobs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This bit defines the action itself.&lt;/p&gt;

&lt;p&gt;Actions is pretty new, and I don‚Äôt know my way around it that well yet. But at this point, I like keeping my jobs to just one job in a workflow. It must be possible to have more than one job per workflow.&lt;/p&gt;

&lt;p&gt;Here we define the job: giving it a name, and telling it the machine to run on. If you are familiar with Dockerfiles, this is akin to the FROM keyword in a Dockerfile which provides a base for your image to be run on. This ‚Äúruns-on‚Äù attribute defines the machine (or set of machines) your jons would run on.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run_tha_ci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we have to define dependent services we would need to run the job. In this case, I need a database to run my tests.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;jobs&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;# ... snipped for brevity ...&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres:11.5-alpine&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;POSTGRSE_DB&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;project_test&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that the PostgreSQL user here is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runner&lt;/code&gt;. I had originally set this to a random name since I thought the name of the DB user would be irrelevant. While testing, however, I realized Hanami required the DB user be ‚Äúrunner‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These steps are commands run in your environment to carry out the job.&lt;/p&gt;

&lt;p&gt;Here, we would like to&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Checkout the sourcecode&lt;/li&gt;
  &lt;li&gt;Setup Ruby with version 2.6.3&lt;/li&gt;
  &lt;li&gt;Install dependencies: libraries, and gems&lt;/li&gt;
  &lt;li&gt;Setup our database&lt;/li&gt;
  &lt;li&gt;Run the specs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thankfully, there are some actions which we would need to use over and over again. With Github Actions, you can abstract this into a repository and reference it anytime you need. A good example is the checkout action. This has been abstracted into the &lt;a href=&quot;http://github.com/actions/checkout&quot;&gt;actions/checkout&lt;/a&gt; repository.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Ruby&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-ruby@v1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.6.3&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install Dependencies&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;sudo apt-get update&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;sudo apt-get -yqq install \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;postgresql \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;postgresql-contrib \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;libpq-dev \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;chromium-chromedriver&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;gem install bundler&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;bundle install --without development production&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Database&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;HANAMI_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGHOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGUSER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;hanami db prepare&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Specs&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec rspec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice two new keywords in this snippet &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uses&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uses&lt;/code&gt; references an action in a repository&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt; defines commands to run in the box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;all together‚Ä¶&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the Yaml file below, every push gets run these steps run against the changeset. If any step in your workflow returns with a non-zero code, that step is marked as a failed step. If any steps in your workflow fails, the action ‚Äúfails‚Äù.&lt;/p&gt;

&lt;p&gt;With this, we have our continuous integration baked right within Github.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;p.s: Getting this up for Rails shouldn‚Äôt be much different.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Tha CI&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run_tha_ci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres:11.5-alpine&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRSE_DB&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;catalyst_test&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5432:5432&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;-&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-cmd pg_isready&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-interval 10s&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-timeout 5s&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-retries 5&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Ruby&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-ruby@v1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.6.3&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install Dependencies&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;sudo apt-get update&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;sudo apt-get -yqq install \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;postgresql \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;postgresql-contrib \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;libpq-dev \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;chromium-chromedriver&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;gem install bundler&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;bundle install --without development production&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Database&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;HANAMI_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;PGHOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;PGUSER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;hanami db prepare&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Specs&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec rspec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 13:47:00 +0000</pubDate>
        <link>https://igbanam.github.io/ci-with-github-actions/</link>
        <guid isPermaLink="true">https://igbanam.github.io/ci-with-github-actions/</guid>
        
        <category>ci</category>
        
        <category>github</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Rails Boundaries from Nested Resources</title>
        <description>&lt;p&gt;With the growth of microservices, and the scaling of many start-ups into medium-sized businesses, apps need to scale in their architecture. A popular way this is done is by creating some sort of grouping in your application. These groupings lead to boundaries. Boundaries could be microservices. The monolith could thus be strangled into microservices along these boundary lines. This is good stuff.&lt;/p&gt;

&lt;p&gt;At this point in the life of a Rails app, most developers opt to build more Rails apps as sibling-microservice applications; smaller, more manageable. The process of creating a boundary could start within Rails. I bet you already have some boundaries defined in your application. All you need do is take the boundary splitting to the next step.&lt;/p&gt;

&lt;h3 id=&quot;opinionated-boundary-routes&quot;&gt;Opinionated Boundary Routes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Let your routes guide you. üôèüèæ&lt;br /&gt;
~ &lt;a href=&quot;https://twitter.com/Yaasky/status/1173634775216742407&quot;&gt;Master Yasky&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A good pointer to the boundaries you already have in your application is defined in your routes file. If you have any nested resources, scoped routes, or namespaced routes, you have created a boundary. Most times, these boundaries are only respected in our routes. When boundaries are implemented properly, the structure of the application should reflect what is within the routes file.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:customers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:orders&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This setup tells me that orders is scoped within customers. With our routes setup this way, we know that our dealings in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orders_controller&lt;/code&gt; would need some parameter from the controller. Sort of speaks to ‚Äúa customer‚Äôs order‚Äù. The file structure which should follow should be thus&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/12cee9d0443c3e3ede2cb9c202d37771.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Currently, Rails does not enforce this by default. Rails would only do this when you generate a nested resource. And the routes for that would be namespaced.&lt;/p&gt;

&lt;p&gt;I am beginning to think it is better to define the product boundaries in architecture as they show up in the routes. This way there are at least two ‚Äî¬†possibly many ‚Äî views into the application architecture; not just a documentation somewhere.&lt;/p&gt;

&lt;h3 id=&quot;things-to-consider-next&quot;&gt;Things to consider next&lt;/h3&gt;

&lt;p&gt;Nested resources is the first glaring pointer that there should be some sort of boundary drawn. But this is not the only pointer. Looking into the routes file shows some other keywords which may point to different ways you may draw boundaries in your Rails application.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Scope&lt;/li&gt;
  &lt;li&gt;Namespace&lt;/li&gt;
  &lt;li&gt;Constraint&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This may be the lingo necessary in differentiating how boundaries are drawn: business concerns, processes, team departments, user roles, and so on.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Sep 2019 22:08:00 +0000</pubDate>
        <link>https://igbanam.github.io/rails-boundaries-from-nested-resources/</link>
        <guid isPermaLink="true">https://igbanam.github.io/rails-boundaries-from-nested-resources/</guid>
        
        <category>rails</category>
        
        <category>ddd</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Deploying Rails to AWS</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;TL;DR If Rails can be deployed on a VPS, can it be deployed on a shared server?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I want to build applications which value. One of the most important steps in my value chain is deploying this application; bringing the application into the customer‚Äôs hands. There are many platforms through which I can deliver my application. One of the easiest to use is Heroku which provides a platform, and orchestrates most of the deployment details away. For the longest time, I deployed Rails applications using the command below&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push heroku feature-branch:master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Recently, I looked into what it would take to deploy Rails into a VPS which I had complete control over. It was quite an interesting exercise; laced with even more interesting problems. Here, I would detail the steps I used in getting Rails 6 deployed on an AWS VPS.&lt;/p&gt;

&lt;p&gt;What did I need&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A server&lt;/li&gt;
  &lt;li&gt;A database&lt;/li&gt;
  &lt;li&gt;A deployment tool&lt;/li&gt;
  &lt;li&gt;An application to deploy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-server&quot;&gt;A Server&lt;/h2&gt;

&lt;p&gt;To get the server running, I provisioned an Ubuntu server on AWS EC2. This is available in the free tier. I chose Ubuntu because I am comfortable with its terminal environment. You can use any linux box you‚Äôre comfortable with. The commands I use here are specific to Ubuntu. Do well to find and use the equivalent for your Linux box.&lt;/p&gt;

&lt;p&gt;To Launch the EC2 instance:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;select EC2 from the list of AWS services&lt;/li&gt;
  &lt;li&gt;click on ‚ÄúLaunch Instance‚Äù&lt;/li&gt;
  &lt;li&gt;the defaults should be fine, but do well to click through them&lt;/li&gt;
  &lt;li&gt;at the Security Group, make sure to open up port 80 for web traffic; it‚Äôs closed by default&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, I am thinking ‚ÄúSomeone should have done the work. This isn‚Äôt novel.‚Äù So I go to google, searching. I see this &lt;a href=&quot;https://gorails.com/deploy/ubuntu/18.04&quot;&gt;fanta-amazing post&lt;/a&gt; from GoRails. Chris Oliver does a good job in setting up Rails on an EC2 instance. This remains my north star for deployments.&lt;/p&gt;

&lt;p&gt;The only pitfall I faced here was around assets. See‚Ä¶ I had created a new rails application to deploy to the server. There were no controllers, no models, nothing. Just a vanilla Rails application. Turns out Capistrano did not feel the need to cmopile assets since it was not needed at the time.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Always have an application you want to deploy before deploying&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With Rails now deployed on AWS, running on NGINX + Passenger, deployed with Capistrano‚Ä¶ I began to think if this is possible on shared servers.&lt;/p&gt;

&lt;h2 id=&quot;updates&quot;&gt;Updates&lt;/h2&gt;

&lt;h3 id=&quot;deploy-keys&quot;&gt;Deploy Keys&lt;/h3&gt;

&lt;p&gt;Github has this neat feature where it allows you to add SSH keys per repository.
Github calls this ‚ÄúDeploy Keys‚Äù. The idea is to give a certain key rights to a
reposoty so it can pull (by default) contents of that repository. This makes it
easy for servers to &lt;a href=&quot;https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys&quot;&gt;add their public SSH keys to these repositories as Deploy
keys&lt;/a&gt; and allow deployment do on smoothly.&lt;/p&gt;

&lt;h3 id=&quot;ssh-forwarding&quot;&gt;SSH Forwarding&lt;/h3&gt;

&lt;p&gt;On AWS, the acceptable way to ues an SSH client to access your server us through
a PEM file. When deplying using Capistrano, you would have to tell Capistrano to
use this private key while running your deploys.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# in config/deploy.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ssh_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;forward_agent: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;auth_methods: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%w[publickey]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;keys: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%w[/path/to/key.pem]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
        <link>https://igbanam.github.io/deploying-rails-to-aws/</link>
        <guid isPermaLink="true">https://igbanam.github.io/deploying-rails-to-aws/</guid>
        
        <category>aws</category>
        
        <category>rails</category>
        
        <category>journal</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>BellBoy</title>
        <description>&lt;p&gt;Oftentimes as software engineers, or generally as consultants, we want to keep track of our time for maximum profit. There are many time-tracking tools out there. I use &lt;a href=&quot;https://nokotime.com/&quot;&gt;Nokotime&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Did you know NokoTime is built with &lt;a href=&quot;https://rubyonrails.org&quot;&gt;Rails&lt;/a&gt;?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Logging your time is good and all, but I had an issue with this. While working in my terminal, I had to leave the comfort of my terminal screen into some web page to log time. This context switch made me feel like I was losing time, albeit seconds, time nonetheless. I thought to fix this.&lt;/p&gt;

&lt;p&gt;The solution provided by NokoTime is an application which sits on your Mac status bar. You can start it or stop it. When the time recording is stopped, it puts the time up at NokoTime as a logged time for the information you entered beforehand. While this worked flawlessly, I still had the problem of context switching.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Did you know the Mac app for NokoTime is built using &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt;?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/igbanam/bellboy&quot;&gt;Bellboy&lt;/a&gt; is a commandline tool which allows you log time right from the comfort of your terminal.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./bellboy

USAGE
=====
  bellboy projects
  bellboy log TIME --for PROJECT_ID
  bellboy [-h | --help]
  bellboy [-v | --version]

ARGS
====

    PROJECT_ID    The ID of the PROJECT to log time for
    TIME          Time in minutes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this time, you can see all your projects on NokoTime, and you can also log time for a particular project. I am thinking of more features to add which makes this easier to work with. Maybe a Vim plugin? I don‚Äôt know. If you have ideas, please &lt;a href=&quot;https://github.com/igbanam/bellboy/issues&quot;&gt;open an issue&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Sep 2019 13:25:00 +0000</pubDate>
        <link>https://igbanam.github.io/bellboy/</link>
        <guid isPermaLink="true">https://igbanam.github.io/bellboy/</guid>
        
        <category>elixir</category>
        
        
        <category>project</category>
        
      </item>
    
  </channel>
</rss>
