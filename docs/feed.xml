<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>These are my thoughts.</description>
    <link>https://igbanam.github.io/</link>
    <atom:link href="https://igbanam.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 02 Feb 2022 10:48:24 +0000</pubDate>
    <lastBuildDate>Wed, 02 Feb 2022 10:48:24 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>I left Instagram. Here&apos;s why.</title>
        <description>&lt;p&gt;I left cos Instagram turned on my camera multiple times while I was scrolling through the timeline. This happened during the morning of October 30. The only way I could catch this was cos the recently released Android 12 on the Pixel 5 has an indicator when an up is accessing you camera or your microphone — I was on the beta release at this time. I chance-saw this blink on twice while scrolling Instagram’s timeline. I then checked the Privacy Dashboard — another feature in this new release — and I saw Instagram accessed the camera momentarily a couple of times. These are the facts.&lt;/p&gt;

&lt;p&gt;Now, the inferences. I couldn’t help but wonder why the camera should turn on when I didn’t explicitly ask that from the app. I couldn’t help but think Instagram takes photos of people scrolling timeline. This suspicion fed into the myth for ads placement. That feeling that Instagram listens. Often exacerbated with ads popping up in timeline when you talk about something with your friends in the presence of your phone — just to site one scenario. These are my inferences.&lt;/p&gt;

&lt;p&gt;The justification and my resignation shows how much of a bind Instagram and its users are in concerning privacy. Before we start using the service, we agree to terms and conditions we most times don’t read. And why not? When the sell is to connect with friends and family, that’s an emotional tug. Logic slips into the cognitive blindspot at that point. This is where the magic happens. The Terms and Conditions force users into agreeing to making a logical decision which fixes an emotional need. In those terms — I presume, cos I still have not read them — there could be something which allows Instagram to use and publish visual content captured from the phone’s camera. Basic legal covering of the bases. This would allow the service capture photos and share them on the network. A corollary to this is the permissions requested from the app on the phone’s OS. Once this is granted, pictures can be captured. This is the ideal service. However, to every face that shows a coin’s value, there’s an under-face often hidden; and every beautiful snake skin would have an underbelly which plays in the mud. The other side of this ideal service is: once these terms are signed and the permissions are granted, there’s no further way to restrict the service. Privacy is thus a game lost before it’s started.&lt;/p&gt;

&lt;p&gt;My resignation is here. It’s in the truth that I’ve always known this. Being an engineer myself, I’m aware of the power people freely give up in blind trust that all tech is ethical. But to see it happen to me, to see the myth confirmed, …that just blew my mind into irrecoverable bits. I know many people need Instagram. Heck, it’s like the Spice in Dune — if you’ve read the book. “Once you have gotten a taste of it, to remove yourself from it is to die.” And yes, leaving Instagram is a death of sorts; a social death. Focusing on the death bits colours this dark and sad. However, all deaths are births unknown. So I’m curious and excited to see where this new birth leads.&lt;/p&gt;

&lt;p&gt;It’s the end of me and Facebook’s family of apps; except WhatsApp.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Dec 2021 14:42:00 +0000</pubDate>
        <link>https://igbanam.github.io/i-left-instagram-here-s-why/</link>
        <guid isPermaLink="true">https://igbanam.github.io/i-left-instagram-here-s-why/</guid>
        
        <category>social media</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>What distinguishes Software Engineers</title>
        <description>&lt;p&gt;In conversation with one of my accountant friends who works in insurance, he made me realize “There is no standard for software engineering.” In accounting, certification exams stratify accountants. They gate the industry, raising the standard of professionals. Software Engineering has adopts the free-for-all approach. So long as you can type some instructions into a computer, and have the computer run it, you can categorize yourself a software engineer. Your ability to market your skills, and rise in the social ladder will get you “recognized”. There are &lt;a href=&quot;https://www.linkedin.com/feed/update/urn:li:activity:6844001756108734464/&quot;&gt;some certificates&lt;/a&gt; within software engineering, but these are not as enforced as in other industries. How then do we tell good engineers from the lot?&lt;/p&gt;

&lt;p&gt;Software Engineering is a people business. People think. People create. People maintain. These are some traits which distinguish good software engineers from the lot.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Competence&lt;/li&gt;
  &lt;li&gt;Maximizes Current Value of Work&lt;/li&gt;
  &lt;li&gt;Practical Informed Decision-Making&lt;/li&gt;
  &lt;li&gt;Enabling others to make decisions efficiently&lt;/li&gt;
  &lt;li&gt;Continuous Learning&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;competence&quot;&gt;Competence&lt;/h2&gt;

&lt;p&gt;Competence is the bedrock of value-generation in any value-system. Competence in software is now everywhere in the interwebs. I call this &lt;em&gt;distributed competence&lt;/em&gt;. A good engineer, however has this distributed competence localized. Localized competence allows an engineer move faster with software. This competence revolves primarily around technical coding skills. This competence is must be tool-agnostic. The focus here is on the quality of code written. How performant is it? If given to a 5 year old, can the 5 year old explain the algorithm?&lt;/p&gt;

&lt;h2 id=&quot;maximizing-current-value-of-work&quot;&gt;Maximizing current value of work&lt;/h2&gt;

&lt;p&gt;To explain this, I must posit two hand-wavy lemmas. First, “Creating software costs money.” The value of engineer-time has grown astronomically over the years. Second, “Software is built to be maintained.” Good businesses want repeat customers; not only one-time customers. On these two lemmas, every software change has a long-term economic value. A good software engineer takes this into consideration with every new change.&lt;/p&gt;

&lt;p&gt;There’s always a new-cool way to get something done. But is it the best way? Hacks through a system create technical debt. This accrues to slow development down over time. Unfortunately, people are less inclined to clean up technical debt when the opportunity cost is losing some potential new business. The optimal and ideal software engineer creates no technical debt. The optimal and ideal software engineer does not exist. However, a good software engineer minimizes the pain of future software engineers maintaining their work.&lt;/p&gt;

&lt;h2 id=&quot;practises-informed-decision-making&quot;&gt;Practises informed decision-making&lt;/h2&gt;

&lt;p&gt;I remember a quote which explained software in a unique light. I do not remember the exact wordings, but paraphrased, it sounds something like…&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A software product is a snapshot of the progression of decisions over time on the subject matter by a certain group of people.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While building software products, software professionals must make and change decisions to continually. These decisions serve to align the software product to the domain where it lives and works, in order to maximize profit — in whatever metric profit is defined as. Another type of decisions made in software engineering is trade-offs. Ever heard the phrase “There are many ways to kill a cat”? That’s true in software more than other industries. Take the Javascript community as an example. If you’re looking for a library to do X, there are on average 100+ packages which vend X. How do you choose which one? If we unfreeze the Javascript decision, how do we select which language vends the best tooling to do X? What do we leave behind? These trade-offs happen daily — sometimes unconsciously — in software engineering. A good software engineer sees clearly enough to make decisions with the best trade-offs for the product.&lt;/p&gt;

&lt;p&gt;Over time, our decision making gets “trained”. The frame of mind through which we view software freezes into a “comfort zone”. A good software engineer is able to occasionally “break frame” in order to gain new insight when making decisions. A broken frame of mind is better at gathering information. A frozen frame of mind is better at filtering information. Both of these are necessary in decision-making.&lt;/p&gt;

&lt;h2 id=&quot;engenders&quot;&gt;Engenders&lt;/h2&gt;

&lt;p&gt;Up until now, all traits we have seen has focused on the individual. While it’s often to great to be a “10x Engineer”, durable software is often built in teams. A good software engineers knows this and replicates these skills in colleagues.&lt;/p&gt;

&lt;p&gt;Engendering includes — but is not limited to — acts pairing, mentoring, supporting, …. Pairing is beneficial both ways. Each part of the pair gets to learn how the other parts does software. Every engineer is unique. Mentoring shares experience and expertise over time. Supporting is often done by more experienced engineers, so less experienced engineers have a safer environment to grow and experiment. These are short explanations to these; but entire volumes can be written about each.&lt;/p&gt;

&lt;h2 id=&quot;continuous-learning&quot;&gt;Continuous Learning&lt;/h2&gt;

&lt;p&gt;No good engineer stays good forever. The industry keeps changing. In order to stay up to date with best practices, engineers must constantly learn. Good engineers maintain a high level of curiosity towards their work. If something does not work, they dive deep into why it doesn’t work. If something works, they dive deeper into why it works. This this continuous learning breeds competence in engineers; and the cycle restarts and continues ad infinitum.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Software Engineering may not have a single examination to filter out professionals. The human-centric nature of the discipline makes it difficult to measure. These five traits should closely approximate the filtering mechanism for distinguishing good engineers from the lot. If you end up abstracting this into some mechanized test, please reach out to me through one of my socials on &lt;a href=&quot;https://igbanam.github.io/&quot;&gt;my homepage&lt;/a&gt; — preferably Twitter. Until then, build good software.&lt;/p&gt;

</description>
        <pubDate>Thu, 04 Nov 2021 08:28:00 +0000</pubDate>
        <link>https://igbanam.github.io/what-distinguishes-software-engineers/</link>
        <guid isPermaLink="true">https://igbanam.github.io/what-distinguishes-software-engineers/</guid>
        
        <category>software</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>A Journey into CLI Mail Clients</title>
        <description>&lt;p&gt;I enjoy GMail shortcuts. I don’t use up to 10% of the available shortcuts, but the ability to navigate with the keyboard has always been fascinating. While playing with GMail shortcuts, I wondered “Surely, there must be a way to read email in the terminal. I don’t want to keep opening my browser every time I have mail.” A little googling and I found some interesting projects.&lt;/p&gt;

&lt;h2 id=&quot;himalaya&quot;&gt;Himalaya&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/soywod/himalaya&quot;&gt;Himalaya&lt;/a&gt; is a CLI email client written in Rust. I had seen other email clients, but what &lt;a href=&quot;https://github.com/soywod/himalaya/pull/224&quot;&gt;attracted me&lt;/a&gt; to Himalaya was its optional Vim front, and the simplicity in setup. You can get up and running in no time. Another cool feature is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imap-password-cmd&lt;/code&gt; option in the setup. This allows you use a password manager to store your passwords locally; thus your password never gets into a config file. I have mine setup with &lt;a href=&quot;https://bitwarden.com/&quot;&gt;Bitwarden&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;setting-up-himalaya&quot;&gt;Setting up Himalaya&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Create a new file at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.config/himalaya/config.toml&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Dump the configuration below into that file&lt;/li&gt;
  &lt;li&gt;Change everything in angle brackets &amp;lt;&amp;gt; to your personal information&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;…as easy as 1, 2, 3!&lt;/p&gt;

&lt;div class=&quot;language-toml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;MY NAME&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;downloads-dir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/global/path/to/your/downloads/folder&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;signature&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;

--
&amp;lt;MY NAME&amp;gt;, written in Himalaya
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[gmail]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;MY ALIAS&amp;gt;@gmail.com&quot;&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;imap-host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;imap.gmail.com&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;imap-port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;993&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;imap-login&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;MY ALIAS&amp;gt;@gmail.com&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;imap-passwd-cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bw get password Himalaya-GMail&quot;&lt;/span&gt;

&lt;span class=&quot;py&quot;&gt;smtp-host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;smtp.gmail.com&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;smtp-port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;465&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;smtp-login&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;MY ALIAS&amp;gt;@gmail.com&quot;&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;smtp-passwd-cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bw get password Himalaya-GMail&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is all the setup required for Himalaya; for GMail. Other mail servers like Yahoo and Hotmail would have different authentication details.&lt;/p&gt;

&lt;h3 id=&quot;pros-and-cons&quot;&gt;Pros and Cons&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The interface is small enough for you to get it&lt;/li&gt;
  &lt;li&gt;Configuration is password-safe&lt;/li&gt;
  &lt;li&gt;IT HAS A VIM FRONT END 🔥🔥🔥&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Every is a new request, is a new connection to the mail server&lt;/li&gt;
  &lt;li&gt;Very much in its alpha stage; not yet production ready&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mutt&quot;&gt;Mutt&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mutt.org/&quot;&gt;Mutt&lt;/a&gt; comes off in the &lt;em&gt;interwebs&lt;/em&gt; as the most robust terminal client for emails. The project is more than 20 years old. There’s a lot more control over email in Mutt. The basic configuration to get started however, is not much different from Himalaya.&lt;/p&gt;

&lt;h3 id=&quot;getting-started-with-mutt&quot;&gt;Getting started with Mutt&lt;/h3&gt;

&lt;p&gt;Mutt is a lot like Vim: everyone’s setup is a tad bit different. But there are some similarities which yield a baseline. To get started with Mutt, we need to know some things about emails. The SMTP protocol is plenty. Here’s my setup.&lt;/p&gt;

&lt;p&gt;First, some pre-requisites&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-muttrc&quot;&gt;mkdir -p ~/.mutt/{headers, bodies}
touch ~/.mutt/certificates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.mutt/muttrc&lt;/code&gt; follows.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-muttrc&quot;&gt;# ===============  IMAP Settings  ===================
set imap_user = &quot;&amp;lt;MY ALIAS&amp;gt;@gmail.com&quot;
set imap_pass = &quot;&amp;lt;MY PASSWORD&amp;gt;&quot;
set smtp_url = &quot;smtp://&amp;lt;MY ALIAS&amp;gt;@smtp.gmail.com:587/&quot;
set smtp_pass = $imap_pass
set ssl_force_tls = yes
set smtp_authenticators = &apos;gssapi:login&apos;

# ============  Folder Organization  ================
set folder = &quot;imaps://imap.gmail.com/&quot;
set spoolfile = &quot;+INBOX&quot;
set postponed = &quot;+[Gmail]/Drafts&quot;
set record = &quot;+[Gmail]/Sent Mail&quot;
set trash = &quot;+[Gmail]/Trash&quot;

# ===============  Mutt Specifics  ==================
set header_cache = &quot;~/.mutt/cache/headers&quot;
set message_cachedir = &quot;~/.mutt/cache/bodies&quot;
set certificate_file = &quot;~/.mutt/certificates&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;pros-and-cons-1&quot;&gt;Pros and Cons&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Mutt does everything email; so robust!&lt;/li&gt;
  &lt;li&gt;You can theme Mutt …the same way you theme Vim&lt;/li&gt;
  &lt;li&gt;The muttrc allows you to &lt;a href=&quot;https://ryanlue.com/posts/2017-05-21-mutt-the-vim-way&quot;&gt;setup Mutt like Vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Learning Curve&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-note-on-security&quot;&gt;A Note on Security&lt;/h2&gt;

&lt;p&gt;For congruent setups across devices, you may want to check-in your configuration into source control. Remember it is safe to do this for Himalaya, it may not be safe to do this in Mutt if you have your password plain in your muttrc. One way to solve this problem is to have your password as an environment variable in your shell&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.zprofile&lt;/code&gt; (or somewhere)&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MUTT_IMAP_PASS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;MY PASSWORD&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.mutt/muttrc&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-muttrc&quot;&gt;set imap_pass = $MUTT_IMAP_PASS
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;my-journey-so-far&quot;&gt;My journey so far…&lt;/h2&gt;

&lt;p&gt;I am currently interested in both projects. Himalaya as the new contender, and Mutt as the veteran in the space. On Himalaya… I am &lt;a href=&quot;https://github.com/soywod/himalaya/pull/224&quot;&gt;actively contributing&lt;/a&gt; to Himalaya’s Vim front. I believe it has a lot of potential. Though — I must confess — there’s the gnawing voice at the back of my head telling me “This project stretches Vim beyond what it was built for.” But it’s interesting to work with email in the same space you work with code. On Mutt… I am learning the space. If the shortcuts feel too alien, I would look to merge my Vim &lt;del&gt;habits&lt;/del&gt; bindings into Mutt. For now, I am still playing with the colors. Next steop, multi-account emails in Mutt. My Mutt is wired up to send emails using Vim; this too is possible.&lt;/p&gt;

&lt;p&gt;We move&lt;/p&gt;

&lt;h1&gt;🚀&lt;/h1&gt;

</description>
        <pubDate>Thu, 14 Oct 2021 22:38:00 +0000</pubDate>
        <link>https://igbanam.github.io/a-journey-into-cli-mail-clients/</link>
        <guid isPermaLink="true">https://igbanam.github.io/a-journey-into-cli-mail-clients/</guid>
        
        <category>cli</category>
        
        <category>email</category>
        
        <category>vim</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Scrollable Box</title>
        <description>&lt;p&gt;CSS has come a long way!&lt;/p&gt;

&lt;p&gt;I recently was trying to make a box scrollable within the view. This box should take the height of the viewport, but could have content which exceed that height. Now, back in the day, I would have done this with Javascript. I had gotten ready to bite the bullet and get this written in Javascript, but something asked me to google “Maths in CSS”. I found &lt;a href=&quot;https://css-tricks.com/keep-math-in-the-css/&quot;&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;css-tricks&quot;&gt;CSS Tricks&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+-----------------------------------------+  * {
|                   1                     |    --banner-height: 20px;
+-----------+-----------------------------+  }
|           |                             |
|           |                             |  #1 {
|           |                             |    height: var(--banner-height);
|           |                             |  }
|           |                             |
|           |                             |  #2 {
|     2     |              3              |    height: calc(100vh - var(--banner-height));
|           |                             |    overflow-x: hidden;
|           |                             |    overflow-y: auto;
|           |                             |  }
|           |                             |
|           |                             |  #4 {
+-----------+-----------------------------+    height: var(--banner-height);
|                   4                     |  }
+-----------------------------------------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 10 Oct 2021 19:55:00 +0000</pubDate>
        <link>https://igbanam.github.io/scrollable-box/</link>
        <guid isPermaLink="true">https://igbanam.github.io/scrollable-box/</guid>
        
        <category>css</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>On the Quest of Origins</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/posts/chekwubeuchea_continue-chekwubeuchea-dreamjobsandcareersnetwork-activity-6699817333566791680-reKt&quot;&gt;This is an amazing read&lt;/a&gt;, and an even more pertinent concern. This problem has been prevalent for millennia; and from the comments to the LinkedIn post, the prevalence is evident.&lt;/p&gt;

&lt;p&gt;This question is part of a larger set of questions I have pondered on in recent years. I fondly call it the “Quest for Origins”. It presents itself in many forms. &lt;a href=&quot;https://www.linkedin.com/posts/chekwubeuchea_continue-chekwubeuchea-dreamjobsandcareersnetwork-activity-6699817333566791680-reKt&quot;&gt;The original post&lt;/a&gt; is one. More examples are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“Who takes the photographer’s picture?”&lt;/li&gt;
  &lt;li&gt;“Who listens to the therapist?”, and&lt;/li&gt;
  &lt;li&gt;“Who takes care of the caretaker’s daughter while the caretaker is out there taking care?” …which is my most favorite instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll continue this line of thought with the original post’s question.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Who takes care of HR?&lt;/p&gt;

  &lt;p&gt;~ &lt;a href=&quot;https://www.linkedin.com/in/chekwubeuchea/&quot;&gt;Chekwube Uchea&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The short answer is “no one”. That’s it. That’s the reality of the matter. This doesn’t mean all is bleak, by the way; because the HR &lt;em&gt;can&lt;/em&gt; be taken care of. The photographer’s picture can be taken. No one takes care of the HR, but the emphasis should be on “one”. My pondering stands the risk of being considered shallow because dates to sound like a thesis but lacks empirical backing, it is all intuition and thought experiments. So take this with a grain — no, bag — of salt.&lt;/p&gt;

&lt;p&gt;From my thoughts, there are two approaches to solving this problem: “structural”, or “amorphous”. These two bank on two of the basic human hormones: serotonin  and oxytocin, respectively.&lt;/p&gt;

&lt;h2 id=&quot;the-structural-approach&quot;&gt;The Structural Approach&lt;/h2&gt;

&lt;p&gt;The way industry has solved this is the former: creating intricate structures in hierarchies. This does not solve the problem totally. It only pushes the problem further into the future, further up the hierarchy. When someone gets to the top of said hierarchy, the problem re-presents itself with the same strength as before. This is mind-stunning, isn’t it? A problem seemingly solved reappearing hints to a poor job was done while solving it. This is expected. The structural method is a patch method. Since it brings momentary respite and is good for the mechanism of business, industry moves on.&lt;/p&gt;

&lt;h2 id=&quot;the-amorphous-approach&quot;&gt;The Amorphous Approach.&lt;/h2&gt;

&lt;p&gt;This is a more communal approach. In the amorphous method, no one is directly responsible for another; in sharp contrast with the “Structural”. However, from aggregating many on the same level, with the same request, the effort which cannot be mustered by oneself to solve the problem can be borrowed from the group. This group is usually formed of individuals with the same leveling; could be skill set, experience, or some higher order derived identity grouping. This amorphous method, in society, is seen as unions, collectives, bodies, and so on. The adulteration of unions and other amorphous forms of support structure in our society is in the need to have a representation; thereby a representative. This quickly devolves the union from the abstract amorphous into the deterministic structural — but I digress.&lt;/p&gt;

&lt;h2 id=&quot;what-to-do&quot;&gt;What to do?&lt;/h2&gt;
&lt;p&gt;The solution I have found for the “Quest of Origins” is neither in the structural, not the amorphous, but in the tango between them two. This puts emphasis on me — or the person undergoing this quest — to craft a means of support unique to their quest. In a sense, reaching this point is an indication that a mind is ripe for entrepreneurship — the scaling of this mindset is for a different conversation. In my case, I setup multiple structural and amorphous groups: join a team with a clear reporting line, have a group of colleagues in said workplace to bounce ideas off, have friends with the same skill set outside the workplace to meet with occasionally, have mentees to teach the experience I’ve garnered. This is sort of a “cardinal” approach, if I may coin a name. It fixes the problem in a north, west, east, south approach respectively.&lt;/p&gt;

&lt;p&gt;Hope this helps throw more light on your conundrum. I’m open to discussing more about this, if you wish.&lt;/p&gt;

</description>
        <pubDate>Sat, 15 Aug 2020 10:34:00 +0000</pubDate>
        <link>https://igbanam.github.io/on-the-quest-of-origins/</link>
        <guid isPermaLink="true">https://igbanam.github.io/on-the-quest-of-origins/</guid>
        
        <category>hr</category>
        
        <category>thought</category>
        
        <category>sociology</category>
        
        <category>support</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Cleaning up my Macbook</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/images/slim-pre.png&quot; alt=&quot;Total Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are many culprits which eat up your hard drive space. I recently had to clean up my Macbook. What I learned is listed here.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; Media is not the only content which eats up your hard disk space.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Waking up to “Your memory is almost full”, I was forced to take a look at how I use my hard disk space. Who would have known that 256GB would run out so soon? Through my time on this machine, I have been careful about storing audiovisual media: I have no music, I don’t use iTunes, I have no movies, I limit the number of PDFs I store by reading and deleting. Despire these practices — which some might deem &lt;em&gt;ascetic&lt;/em&gt;, 256GB hard disk ran out in no time. Why?&lt;/p&gt;

&lt;h3 id=&quot;operating-system&quot;&gt;Operating System&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-system.png&quot; alt=&quot;System Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a non-negotiable 5GB to 6GB used up by the operating system. This is necessary for your computer to run. There’s no touching this, no tampering with this. Matter of fact, when inspecting your newly gotten computer, chances are you would see 251GB free. This is where the extra 6GB ish went to. Some other areas which could contribute to system bloat are files in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Library&lt;/code&gt; folder. These files are used to support your computer’s runtime. But as we shall see, most of them are obsolete or unnecessary.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The bloat thickens&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My Macbook breaks down my storage use into the following categories&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Documents&lt;/li&gt;
  &lt;li&gt;Apps&lt;/li&gt;
  &lt;li&gt;Music Creation&lt;/li&gt;
  &lt;li&gt;System&lt;/li&gt;
  &lt;li&gt;Other Volumes in Container&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ll tackle this in increasing order of bloat.&lt;/p&gt;

&lt;h3 id=&quot;music-creation&quot;&gt;Music Creation&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-music.png&quot; alt=&quot;Music Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is Garageband, basically. My work as a software developer for software developers has little to nothing to so with Music Creation, so the assets here are little.&lt;/p&gt;

&lt;h3 id=&quot;apps&quot;&gt;Apps&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-apps.png&quot; alt=&quot;Apps Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I currently have 66 apps on this Macbook. The biggest of them all is — …drum roll… — &lt;strong&gt;XCode&lt;/strong&gt;. Yup, you guessed right. That fat blob of I-only-make-apple-apps sits in a proud 19.02GB space. The next largest app is iMovie at 2.82GB. Who uses these things?&lt;/p&gt;

&lt;h3 id=&quot;documents&quot;&gt;Documents&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-documents.png&quot; alt=&quot;Documents Bloat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This contains everything in the user space. It’s hard figuring out what the culprit is here, so I used a few tips to help me out.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use the List View in finder. Set this to show sizes of files and folders in the Show View option of the context menu. Order by Size.&lt;/li&gt;
  &lt;li&gt;(Pretty much the same thing as 1. but in the command line)&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~
du -hd 1 | sort -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-clean-up-&quot;&gt;The Clean-up 🧹&lt;/h3&gt;

&lt;p&gt;Here, I found many interesting things&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Most of the culprits are in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Library&lt;/code&gt;. — This folder is not shown by default. Click “Go” in the Finder menu, and hold down Option to reveal this.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zoom.us/&quot;&gt;Zoom&lt;/a&gt; stores the pictures of everyone you’ve ever joined a conference with on your computer.&lt;/li&gt;
  &lt;li&gt;After you uninstall an application, the Application Support within your Library may live on.&lt;br /&gt;
  a. Also, when you install a newer version of an application and its underlying file struucture changes, the remnants of the old structure remain in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Library&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Hidden folders are not accounted for in the Finder view.
  a. For this, I used the commandline option, which showed me that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ruby-motion&lt;/code&gt; sat in a comfortable 77GB space.&lt;/li&gt;
  &lt;li&gt;Beware of Docker. It’s fun to play with, and it solves an amazing problem. But it leaves so much behind, and does not automatically clean up after itself.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/slim-post.png&quot; alt=&quot;The Slim!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cleaning up should not be a one-time thing. It should be a lifestyle.&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Oct 2019 11:05:00 +0000</pubDate>
        <link>https://igbanam.github.io/cleaning-up-my-macbook/</link>
        <guid isPermaLink="true">https://igbanam.github.io/cleaning-up-my-macbook/</guid>
        
        <category>laptop</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Presentation Skills</title>
        <description>&lt;p&gt;Through our careers as software engineers, our experience would grow as we practice our craft. There’s a saying that one does not really know a topic well enough until they can teach it. This knowledge sharing opens up what we know for critique, and solidifies what we know. There are many ways o share knowledge. This post focuses on presentations.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You never really know something until you can teach it.&lt;/p&gt;

  &lt;p&gt;~ Unknown&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Presentations can sometimes be daunting; standing on a [make-shift] stage, looking at everyone, them looking back. Sometimes, you get nervous. Sometimes, you will swallow your words. Presentations, like software programming, is a skill which can be learned and mastered.&lt;/p&gt;

&lt;p&gt;The mode and manner of your presentation is as important as your content. Do not prioritize one at the expense of the other. Most times, our expertise takes care of the content aspect. But nothing takes care of how the presentation is done. Here, I would share some tips I have used over the years.&lt;/p&gt;

&lt;h3 id=&quot;know-your-content&quot;&gt;Know Your Content&lt;/h3&gt;

&lt;p&gt;When presenting any content, it is pertinent you are conversant with the topic you choose to present. When we create a presentation out of experience, the topic picks itself. When we have to pick a topic to present, we need to research that topic thoroughly. You may not be an expert in the topic, but you must be an expert in what you know. This should also come with a pinch of humility. There may be some people in your audience who may know your topic more than you do. Remember your presentation is also a way for you to learn.&lt;/p&gt;

&lt;p&gt;Pick a topic you are passionate about. This passion would drive your research. A topic you are not interest in would grow boring as you prepare for the presentation. This may lead to burnout; specifically “detachment” from your subject matter.&lt;/p&gt;

&lt;h3 id=&quot;calm-down&quot;&gt;Calm Down&lt;/h3&gt;

&lt;p&gt;Let’s face it: when you stand in front of a crows to give a speech, you will feel nervous. If you do not feel nervous when walking up the stage, it will come with you look into the eyes of the crowd. I get most nervous when the audience goes silent because I’m thinking “They actually want to listen. What if…?” At this point, I try to calm down. What is the worst that could happen?&lt;/p&gt;

&lt;p&gt;Before every presentation, I mentally go through the presentation in practice. I try to mimic the feelings of the day, try to practice facing the audience. This helps me prepare my nerves not to break at the first impact of nervousness when it hits. Practice this with a friend. If you have more fears, open up to a friend about them. This would help you think through your fears from an objective standpoint.&lt;/p&gt;

&lt;p&gt;Think positive. Remember the first sentence which drives me into nervousness? “They actually want to listen.” This is true for every audience who have come — regardless of the travel — to listen to what you have to say. Your audience is proof that there are people who believe in you. You have to believe in yourself. Positive thoughts go a long way. My practice with this is thus: Try not to use the word “not” when speaking about your presentation. In any sentence, you think to utter about your presentation, if it has the word “not” in it, try to reword that sentence to remove the “not”. If you cannot find an alternate sentence which removed “not” but keeps the message you want to pass across, it’s best to be silent.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For positive thought, try speaking without “not” in your sentences.&lt;/p&gt;

  &lt;p&gt;Do this as a zen practice&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Exercise. Yes, I mean it. Workout before the presentation. This also helps you calm your nerves on stage. How? When your body goes through controlled stress, it builds its resilience. When a built resilience meets stress levels below the ones which build it, the propensity to panic is greatly reduced. Speaking during presentations is a physical act. It takes a toll on your breathing. Exercises (especially cardio) would build your stamina, allowing you to talk for longer without getting tired. Exercising the morning of your presentation helps get your blood flowing, makes you more alert.&lt;/p&gt;

&lt;p&gt;Another culprit which makes presenters more susceptible to a nervous breakdown is lack of sleep. I cannot stress this enough. We all need sleep. Try to get a good 8 hours of sleep the night before your presentation. If you can get more, please do. Insufficient sleep makes our bodies react in weird ways.&lt;/p&gt;

&lt;h3 id=&quot;be-enthusiastic&quot;&gt;Be Enthusiastic&lt;/h3&gt;

&lt;p&gt;If you cannot be calm, best to channel all that energy into enthusiasm for your presentation.&lt;/p&gt;

&lt;h3 id=&quot;speak-audibly&quot;&gt;Speak Audibly&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Focus on what you want to say and how to say it. You’d be shocked how hard this gets.&lt;/li&gt;
  &lt;li&gt;Practise with a friend (or a recorder). The goal here is to get feedback. Rehearse out loud.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;measure-your-speech&quot;&gt;Measure Your Speech&lt;/h3&gt;

&lt;p&gt;When the nerves are high, there is a tendenty to speak faster than your natural cadence. This is normal. If you find yourself speaking faster than you usually do, pause at some point. The only person who knows your content inside out is you. A pause does not count poorly to your performance. It is an integral part of your presentation.&lt;/p&gt;

&lt;p&gt;Presentations are built to have pauses; this is why each slide is a separate entity. It is better to consciously design your presentation to have pause points within it. A good way to do this is to ask the audience a question. Throwing control back to the audience for a few seconds could help in allowing you gather your thoughts and composure.&lt;/p&gt;

&lt;p&gt;Remember that the audience has gathered to listen to you. You are in control of the presentation.&lt;/p&gt;

&lt;h3 id=&quot;understand-presentation-techniques&quot;&gt;Understand Presentation Techniques&lt;/h3&gt;

&lt;p&gt;On presentation day, dress smart; or dress in a way which augments your presentation. If your audience percieves you as someone capable of giving the presentation, they would be more open to your content. If you are presenting to a panel of business men on the details of a business, best to dress like a businessman.&lt;/p&gt;

&lt;p&gt;The general rule of thumb is to dress smart. Sometimes, you may dress differently depending on your research on your audience, and the knowledhe of your topic. If I am presenting on fire hazards and safety peocedures in such situations, I would dress like a fire marshall; maybe not the whole costume shindig; but a nice clean T-shirt with sharp jeans, and rugged shoes would do.&lt;/p&gt;

&lt;p&gt;All in all, make sure you’re comfirtable in yoru clothing. You would be standing in front of an audience, talking for quite some time.&lt;/p&gt;

&lt;h3 id=&quot;know-your-environment-and-audience&quot;&gt;Know Your Environment and Audience&lt;/h3&gt;

&lt;p&gt;Through this article, I have touched on some bits where you have to be aware of your audience. It pays to understand the demographic you’re speaking to: this would help guide the language you use in delivering your content.&lt;/p&gt;

&lt;p&gt;Akin to the audience, it is also imperative to understand the enditonment you would be presenting in. Try to visit the venue for your presentation a day before. Get on stage with no one there and practice walking around. Get familiar with the size of the room, and how your voice bounces off the walls when you speak. This would create some familiarity with your space. During the presentation, you would feel more comfortable walking around and interacting with your envitonment.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;There is never a master of presentations. The skill is built over a lifetime. Every new presentation is a chance to learn something new; the audience is unique, the time the presentation is given has its unique properties. When approaching a presentation, even if it is on a topic which you have presented on before, treat it with the same respect and humility as a first time presentation.&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Oct 2019 22:32:00 +0000</pubDate>
        <link>https://igbanam.github.io/presentation-skills/</link>
        <guid isPermaLink="true">https://igbanam.github.io/presentation-skills/</guid>
        
        <category>public speaking</category>
        
        <category>presentation</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Know Your Operations</title>
        <description>&lt;p&gt;I recently saw a new detail of a new release into Ruby 2.7 where the array class would have methods like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intersection&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;union&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;difference&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;TL;DR These already exist; as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; — but they have been SUPERCHARGED 🔥&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are &lt;a href=&quot;https://www.ruby-lang.org/en/news/2019/05/30/ruby-2-7-0-preview1-released/&quot;&gt;many cool additions to Ruby 2.7&lt;/a&gt;. Through my readings this morning, I saw that the array class would be getting an additional &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#intersection&lt;/code&gt; alias; yet another alias along the lines of &lt;a href=&quot;https://ruby-doc.org/core-2.6.3/Array.html#method-i-union&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#union&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://ruby-doc.org/core-2.6.3/Array.html#method-i-difference&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#difference&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While this sounded interesting, I thought “What is the performance benefit of having this method?” So I got the new &lt;a href=&quot;https://cache.ruby-lang.org/pub/ruby/2.7/ruby-2.7.0-preview1.tar.gz&quot;&gt;Ruby 2.7&lt;/a&gt; and gave it a spin.&lt;/p&gt;

&lt;p&gt;Sadly, the &lt;a href=&quot;https://github.com/ruby/ruby/pull/2533/files&quot;&gt;patch for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Array#intersection&lt;/code&gt;&lt;/a&gt; has not made it into the 2.7 preview build yet.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;✔ ~/Downloads/ruby-2.7.0-preview1/install_here/test_programs
10:43 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;../bin/ruby &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
ruby 2.7.0preview1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2019-05-31 trunk c55db6aa271df4a689dc8eb0039c929bf6ed43ff&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;x86_64-darwin18]
✔ ~/Downloads/ruby-2.7.0-preview1/install_here/test_programs
10:43 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;../bin/ruby
puts Array.new.respond_to?&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;:intersection&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I thought to give the other methods a benchmark. This benchmark still uses the Ruby version above, and seeks to compare the timing difference between the method on the object and the operation.&lt;/p&gt;

&lt;h3 id=&quot;array-difference-aka--&quot;&gt;Array Difference a.k.a “-“&lt;/h3&gt;

&lt;p&gt;The syntax for this is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;left_array.difference(right_array)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This returns all the elements in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;left_array&lt;/code&gt; which are not present in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;right_array&lt;/code&gt;. The difference operation, unlike all other operations considered here, is not commutative. This means &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;left_array - right_array != right_array - left_array&lt;/code&gt;, unless in a special case where the contents of both arrays allow this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benchmarker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require &apos;benchmark&apos;

a = (1..8).to_a
b = (2..9).to_a

# a - b = [1]
# b - a = [9]

puts &quot;Time for a - b&quot;
puts Benchmark.measure { 1_000_000.times { a - b } }
puts &quot;Time for a.difference b&quot;
puts Benchmark.measure { 1_000_000.times { a.difference b } }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Results for Difference&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Time for a - b
  0.263208   0.000529   0.263737 (  0.264506)
Time for a.difference b
  0.284521   0.002734   0.287255 (  0.289998)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The results here show that the &lt;strong&gt;operation is more performant&lt;/strong&gt;; albeit slightly than the method call.&lt;/p&gt;

&lt;p&gt;Note that the test inputs here are two ordered arrays — which I believe is the simplest case — made to overlap themselves with only one integer.&lt;/p&gt;

&lt;h3 id=&quot;array-union-aka-&quot;&gt;Array Union a.k.a “|”&lt;/h3&gt;

&lt;p&gt;This returns all unique items in two arrays. This operation is commutative. Despite the position of the operands, the result is always the same&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benchmarker&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;benchmark&apos;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_a&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# a | b = [1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Time for a | b&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Time for a.union b&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;measure&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Results for (ordered) Union&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Time for a | b
  0.514844   0.003135   0.517979 (  0.521104)
Time for a.union b
  0.520425   0.002118   0.522543 (  0.525702)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;From the benchmarks, it seems like there isn’t much of a performance hit with the methods on the array object; slightly less performant, but nothing which would bring down your servers in production.&lt;/p&gt;

&lt;p&gt;This is still a welcome change; along two lines&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ruby prides itself in fostering developer happiness. With this new additions, code just reads better; the intent of the code is self-evident.&lt;/li&gt;
  &lt;li&gt;With these new methods, we now have the ability to pass multiple arrays to the operations. e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[1, 2, 3].difference([1], [2]) #=&amp;gt; [3]&lt;/code&gt;. This was not possible with just the operations.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 18 Oct 2019 08:51:00 +0000</pubDate>
        <link>https://igbanam.github.io/know-your-operations/</link>
        <guid isPermaLink="true">https://igbanam.github.io/know-your-operations/</guid>
        
        <category>ruby</category>
        
        <category>performance</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>C.I. with Github Actions</title>
        <description>&lt;p&gt;Continuous Integration is key in the delivery of any software. Now, “continuous integration” has had many definitions over the years. Some say it has to do with bringing code from different branches, “integrating” them into a delivery beanch. Some day it’s the introduction of automated tests into your pipeline. Others, as primitive as me, say it’s CircleCI and TrravisCI. Wherever you fall on this spectrum, you may have the belief that continuous integration makes it easier to ship code.&lt;/p&gt;

&lt;p&gt;There are many continuous integration tools. Most of these tools handle running tests for a particular changeset of your sourcecode. This helps you validate that the new changeset both meets its requirements (written in tests) and does not break the hitherto realized requirements of the system. Previously, I have depended on CircleCI to get this done. But with the recent Github Actions, one could do anything which could be done with a repo based on some Github events like push, and pull-request. With this new capability, I sought to wean myself from CircleCI and other CI pipelines. Since code is hosted on GitHub, I thought it best to localize the delivery of the code on Github.&lt;/p&gt;

&lt;h3 id=&quot;the-setup&quot;&gt;The Setup&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;A new Hanami project. Hanami comes with RSpec as a default testing framework.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;Github Actions&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;our-ci&quot;&gt;Our CI&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;br /&gt;
This defines the action, and creates a reference through your workflow&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Tha CI&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;on&lt;/strong&gt;&lt;br /&gt;
Actions run on specific events in the Github ecosystem. Push and Pull Request are two popular events Actions could be run on. For a more comprehensive list, read &lt;a href=&quot;https://help.github.com/en/articles/events-that-trigger-workflows&quot;&gt;Events that trigger workflows&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We would want to “Run Tha CI” on every push event.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This list is an array. If you want this workflow to trigger for more than one event, add the event to the array separated by commas. Another way of writing this could be&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;jobs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This bit defines the action itself.&lt;/p&gt;

&lt;p&gt;Actions is pretty new, and I don’t know my way around it that well yet. But at this point, I like keeping my jobs to just one job in a workflow. It must be possible to have more than one job per workflow.&lt;/p&gt;

&lt;p&gt;Here we define the job: giving it a name, and telling it the machine to run on. If you are familiar with Dockerfiles, this is akin to the FROM keyword in a Dockerfile which provides a base for your image to be run on. This “runs-on” attribute defines the machine (or set of machines) your jons would run on.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run_tha_ci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;services&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now we have to define dependent services we would need to run the job. In this case, I need a database to run my tests.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;jobs&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;# ... snipped for brevity ...&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres:11.5-alpine&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;POSTGRSE_DB&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;project_test&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that the PostgreSQL user here is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runner&lt;/code&gt;. I had originally set this to a random name since I thought the name of the DB user would be irrelevant. While testing, however, I realized Hanami required the DB user be “runner”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These steps are commands run in your environment to carry out the job.&lt;/p&gt;

&lt;p&gt;Here, we would like to&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Checkout the sourcecode&lt;/li&gt;
  &lt;li&gt;Setup Ruby with version 2.6.3&lt;/li&gt;
  &lt;li&gt;Install dependencies: libraries, and gems&lt;/li&gt;
  &lt;li&gt;Setup our database&lt;/li&gt;
  &lt;li&gt;Run the specs.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thankfully, there are some actions which we would need to use over and over again. With Github Actions, you can abstract this into a repository and reference it anytime you need. A good example is the checkout action. This has been abstracted into the &lt;a href=&quot;http://github.com/actions/checkout&quot;&gt;actions/checkout&lt;/a&gt; repository.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Ruby&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-ruby@v1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.6.3&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install Dependencies&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;sudo apt-get update&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;sudo apt-get -yqq install \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;postgresql \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;postgresql-contrib \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;libpq-dev \&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;chromium-chromedriver&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;gem install bundler&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;bundle install --without development production&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Database&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;HANAMI_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGHOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;PGUSER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;hanami db prepare&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Specs&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec rspec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice two new keywords in this snippet &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uses&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uses&lt;/code&gt; references an action in a repository&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt; defines commands to run in the box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;all together…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the Yaml file below, every push gets run these steps run against the changeset. If any step in your workflow returns with a non-zero code, that step is marked as a failed step. If any steps in your workflow fails, the action “fails”.&lt;/p&gt;

&lt;p&gt;With this, we have our continuous integration baked right within Github.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;p.s: Getting this up for Rails shouldn’t be much different.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Tha CI&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;run_tha_ci&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;postgres:11.5-alpine&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRES_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRSE_DB&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;catalyst_test&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;5432:5432&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;&amp;gt;-&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-cmd pg_isready&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-interval 10s&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-timeout 5s&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;--health-retries 5&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v1&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Ruby&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-ruby@v1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;2.6.3&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Install Dependencies&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;sudo apt-get update&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;sudo apt-get -yqq install \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;postgresql \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;postgresql-contrib \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;libpq-dev \&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;chromium-chromedriver&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;gem install bundler&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;bundle install --without development production&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Setup Database&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;HANAMI_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;PGHOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;PGUSER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;runner&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;hanami db prepare&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Run Specs&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec rspec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 13:47:00 +0000</pubDate>
        <link>https://igbanam.github.io/ci-with-github-actions/</link>
        <guid isPermaLink="true">https://igbanam.github.io/ci-with-github-actions/</guid>
        
        <category>ci</category>
        
        <category>github</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Rails Boundaries from Nested Resources</title>
        <description>&lt;p&gt;With the growth of microservices, and the scaling of many start-ups into medium-sized businesses, apps need to scale in their architecture. A popular way this is done is by creating some sort of grouping in your application. These groupings lead to boundaries. Boundaries could be microservices. The monolith could thus be strangled into microservices along these boundary lines. This is good stuff.&lt;/p&gt;

&lt;p&gt;At this point in the life of a Rails app, most developers opt to build more Rails apps as sibling-microservice applications; smaller, more manageable. The process of creating a boundary could start within Rails. I bet you already have some boundaries defined in your application. All you need do is take the boundary splitting to the next step.&lt;/p&gt;

&lt;h3 id=&quot;opinionated-boundary-routes&quot;&gt;Opinionated Boundary Routes&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Let your routes guide you. 🙏🏾&lt;br /&gt;
~ &lt;a href=&quot;https://twitter.com/Yaasky/status/1173634775216742407&quot;&gt;Master Yasky&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A good pointer to the boundaries you already have in your application is defined in your routes file. If you have any nested resources, scoped routes, or namespaced routes, you have created a boundary. Most times, these boundaries are only respected in our routes. When boundaries are implemented properly, the structure of the application should reflect what is within the routes file.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:customers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:orders&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This setup tells me that orders is scoped within customers. With our routes setup this way, we know that our dealings in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;orders_controller&lt;/code&gt; would need some parameter from the controller. Sort of speaks to “a customer’s order”. The file structure which should follow should be thus&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/12cee9d0443c3e3ede2cb9c202d37771.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Currently, Rails does not enforce this by default. Rails would only do this when you generate a nested resource. And the routes for that would be namespaced.&lt;/p&gt;

&lt;p&gt;I am beginning to think it is better to define the product boundaries in architecture as they show up in the routes. This way there are at least two — possibly many — views into the application architecture; not just a documentation somewhere.&lt;/p&gt;

&lt;h3 id=&quot;things-to-consider-next&quot;&gt;Things to consider next&lt;/h3&gt;

&lt;p&gt;Nested resources is the first glaring pointer that there should be some sort of boundary drawn. But this is not the only pointer. Looking into the routes file shows some other keywords which may point to different ways you may draw boundaries in your Rails application.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Scope&lt;/li&gt;
  &lt;li&gt;Namespace&lt;/li&gt;
  &lt;li&gt;Constraint&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This may be the lingo necessary in differentiating how boundaries are drawn: business concerns, processes, team departments, user roles, and so on.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Sep 2019 22:08:00 +0000</pubDate>
        <link>https://igbanam.github.io/rails-boundaries-from-nested-resources/</link>
        <guid isPermaLink="true">https://igbanam.github.io/rails-boundaries-from-nested-resources/</guid>
        
        <category>rails</category>
        
        <category>ddd</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
